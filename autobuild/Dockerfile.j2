# Build via docker:
# docker build --build-arg cores=8 -t blocknetdx/{{ walletDockerName }}:latest .

FROM ubuntu:{{ buildOS }}

ARG cores=6
ENV ecores=$cores

LABEL wallet={{ walletName }}
LABEL version={{ walletGitTag }}

ENV TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt update \
  && apt install -y --no-install-recommends \
     software-properties-common \
     ca-certificates \
     wget curl git python vim \
     build-essential libtool autotools-dev automake \
     pkg-config bsdmainutils bison python3 libgmp-dev cmake \
  && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV DISTDIR=/opt/blockchain/dist

# Build source
RUN mkdir -p /opt/{{ walletLinuxDir }} \
  && mkdir -p /opt/blockchain/config \
  && mkdir -p /opt/blockchain/data \
  && ln -s /opt/blockchain/config /root/.{{ walletLinuxDir }} \
  && cd /opt/{{ walletLinuxDir }} \
  && git clone --depth 1 --branch {{ walletGitTag }} {{ walletGitURL }} {{ walletLinuxDir }} \
  && cd /opt/{{ walletLinuxDir }}/{{ walletLinuxDir }}/ \
  && cd depends \
  {% if walletName == 'dash' %}
&& sed -i "s/\$(package)_download_path=https:\/\/gmplib.org\/download\/gmp/\$(package)_download_path=https:\/\/ftp.gnu.org\/gnu\/gmp/" packages/gmp.mk \
  {% endif %}
&& make -j$ecores NO_QT=1 \
  && cd .. \
  && chmod +x ./autogen.sh \
  && ./autogen.sh \
  && ./configure CC="gcc-9" CXX="g++-9" CXXFLAGS="-Wno-error=return-type" --with-gui=no --enable-hardening --prefix=`pwd`/depends/x86_64-pc-linux-gnu \
  && make -j$ecores \
  {% if walletName == 'pivx' %}
&& ./params/install-params.sh \
  {% endif %}
&& make install DESTDIR=$DISTDIR \
  && cp $DISTDIR/opt/{{ walletLinuxDir }}/{{ walletLinuxDir }}/depends/x86_64-pc-linux-gnu/bin/* /usr/bin/ \
  && rm -rf /opt/{{ walletLinuxDir }}/

# Write default {{ walletConfName }} (can be overridden on commandline)
RUN echo "datadir=/opt/blockchain/data  \n\
                                        \n\
dbcache=256                             \n\
maxmempool=512                          \n\
                                        \n\
port={{ walletPort }}                               \n\
rpcport={{ walletRPCPort }}                            \n\
                                        \n\
listen=1                                \n\
txindex=1                               \n\
server=1                                \n\
maxconnections=16                       \n\
logtimestamps=1                         \n\
logips=1                                \n\
                                        \n\
rpcallowip=127.0.0.1                    \n\
rpctimeout=30                           \n\
rpcclienttimeout=30                     \n" > /opt/blockchain/config/{{ walletConfName }}

WORKDIR /opt/blockchain/
VOLUME ["/opt/blockchain/config", "/opt/blockchain/data"]

# Port, RPC, Test Port, Test RPC
EXPOSE {{ walletPort }} {{ walletRPCPort }}  {{ testnetPort }}  {{ testnetRPC }}

CMD ["/usr/bin/{{ walletDaemon }}", "-daemon=0"]
