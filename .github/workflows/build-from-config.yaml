name: BUILD IMAGE FROM CONFIG

on:
  workflow_dispatch:
    inputs:
      image:
        description: The full name of the wallet. Example - bitcoin, dash, blocknet.
        required: true
      version:
        description: Wallet version. Please check manifest-latest.json. By default it takes the newest version.
        required: false
        default: latest
      manifest:
        description: Raw manifest config file contents.
        required: false
      wallet_conf:
        description: Raw wallet config file contents.
        default: false
      repo:
        description: DockerHub repo name.
        required: true
        default: blocknetdx

jobs:

  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Login to DockerHub
      run: echo ${{ secrets.org_blocknetdximg_password }} | docker login --username ${{ secrets.org_blocknetdximg_username }} --password-stdin

    # Build images
    - name: INFO BUILD
      run: echo ${{ github.event.inputs.image }} ${{ github.event.inputs.version }}
    - name: generate a Dockerfile
      run: ./generate.sh "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "${{ github.event.inputs.manifest }}" "${{ github.event.inputs.wallet_conf }}"
    - name: build an image
      run: ./ci.sh build "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "*" "${{ github.event.inputs.repo }}"
    - name: Run a container
      run: ./ci.sh run "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "*" "${{ github.event.inputs.repo }}"
    # TODO: next step commented out until generate_build_files.py is updated to read the *local* manifest to find the daemon stem
    #- name: Test build
    #  run: ./ci.sh test "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}"
    - name: Remove a container
      run: ./ci.sh clean "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}"
    - name: Remove dangling images
      if: ${{ always() }}
      run: yes | docker image prune
    - name: Push an image to DockerHub
      run: ./ci.sh push "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "*" "${{ github.event.inputs.repo }}"

#  staging:
#    if: ${{ github.event.pull_request }}
#    needs: build
#    runs-on: self-hosted
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Test new image
#      run: echo "Some test"
 
